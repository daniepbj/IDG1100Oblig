6. What is the octal representation of a file that can be read and written only by its owner?
600

7.In UNIX systems, what is the common name of the special user that can access and modify every file?
Superuser/root

8.Which file permission classes are available in UNIX systems?
Each file has an owner (a user) and a group to which it belongs:

    User (u)— the user owning the entity
    Group (g)— the group the file belongs to
    Others (o) — every user on the system


9.As of 2020, which percentage of servers have UNIX-like OS?
70% (according to lecture)

10.The command ssh will:
Enable a secure connection to the SSH server on a remote machine.

11.UNIX Command: access your current working directory
dir=$(pwd)

12.UNIX Command: rename files (give an example)

There is not a command for renaming files, mv is used to change the name or to move a file into a different directory:
mv fileabc newname

13.UNIX Command: schedule the execution of programs in the future
crontab -e

14.UNIX Command: Forcefully shutdown the command with process ID 123
You have to use the "kill" command together with the prossess id (PID). In this example it would be:
kill -9 123

15.UNIX Command:access your root user
sudo -i/sudo -s

16. Crontab scheduled: At minute 30 on Sunday.
30 * * * SUN

17. Crontab scheduled: At minute 30 on day-of-month 15.
30 * 15 * *

18. Crontab scheduled: At 05:30 on every day-of-week from Sunday through Monday in June.
30 5 * 6 SUN-MON

19.Script:print your name and date
name=Daniel
        d=$(date +%Y-%m-%d)
        echo "$name" "$d"

20.Script:add two numeric values, print the result
a=5
b=7
c=`expr $a + $b`
echo $c

21.Script:inputs username, prints “USERNAME stored”

Depends on whats asked for here. If the question is taking the current username + the word stored:
echo "$USER"'stored'

If the question is to ask for a username as input + the word stored:
read -p "What's your username? : " n1
echo "$n1 stored"

22.Script:Store the output of the command “hostname” in a variable. Display “This script is running on _.” where “_” is the output of the “hostname” command.
a=' This script is running on'
b=$(hostname)
c="${a} $b"
echo "${c}":;

23.Script:Store the output of the workingdirectory (from where the script is run) in a variable then print the variable.
wDir=$PWD
echo $wDir

24.Create a step by step tutorial on how to create a cronjob that prints “Task scheduled at”+ DATE. Cronjob is scheduled every 30 minutes on today’s date(only today).

        # 1. Store string “Task scheduled at” in a var:
        message='Task scheduled at'
        
        # 2. Set current date in the right format, assign to variable:
        
        CRONDATE=$(date +"%d %m %y")
        
        # 3. Echo current date, crontab concatinated with $a
        echo "$message */30 * * $CRONDATE"

25.Create a script that takes an input (letter or number) that will display the answer of a question.
The script should when started list a menu for the user with the different questions that can be chosen and which corresponding letter the user will have to give as input to display the answer of the desired question.
One of the possible inputs the user should be able to make is "q" for quitting the script.
The menu should also have a defaultcase where all the items is displayed again,or no changes is made if the user gives an invalid input.Hint: use a switch case to be able to handle the menu. Each option in the menu should lead to an echo of the answer

Creates .sh file, runs said file with bash command:
while true; do
        echo "Enter the number (1 or 2) to the question you want the answer to: "
        echo "1) What shape is the earth?"
        echo "2) What shape is the earth according fo flat earthers? "
        echo "Input [Q] to quit."
        read QUESTION
        
        echo -n "The answer to question $QUESTION is "
        
        case $QUESTION in
        
          1)
            echo "Round"
            ;;
        
          2)
            echo "Flat"
            ;;
          q)
            echo "Thank you, goodbye!"
            exit
            ;;
          *)
            echo
            echo "Invalid, choose 1 or 2!"
            ;;
        esac
        done
